% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/request_site.R
\name{request_site}
\alias{request_site}
\title{Request site containing personalised charts}
\usage{
request_site(
  txt = "",
  sitehost = "",
  session = "",
  format = "3.0",
  upload = TRUE,
  loc = "",
  ...
)
}
\arguments{
\item{txt}{A JSON string, URL, or file with BDS data in JSON format. Data
should conform to the BDS JGZ 3.2.5 specification.}

\item{sitehost}{The server that renders the site. Defaults to
\code{"http://localhost:8080"} if not specified.}

\item{session}{Optional session key if data is already uploaded to \code{sitehost}.}

\item{format}{JSON schema version, e.g., \code{"3.0"}. Used when uploading.}

\item{upload}{Logical. If \code{TRUE}, uploads \code{txt} and returns URL with
\verb{?session=}. If \code{FALSE}, appends \verb{?txt=} directly (not recommended).}

\item{loc}{Deprecated. Use \code{session} instead.}

\item{...}{Ignored}
}
\value{
A character string URL pointing to the personalised JAMES site.
}
\description{
Constructs a URL to a JAMES site showing a personalised growth chart.
Optionally uploads the data to the server and returns a session-based URL.
}
\examples{
fn <- system.file("testdata", "client3.json", package = "james")
js <- jsonlite::toJSON(jsonlite::fromJSON(fn), auto_unbox = TRUE)
url <- "https://groeidiagrammen.nl/ocpu/library/james/testdata/client3.json"
host <- "http://localhost:8080"
host <- "https://james.groeidiagrammen.nl"

# solutions that upload the data and create a URL with the `?session=` query parameter
\dontrun{
# upload file - works with docker on localhost
site <- request_site(sitehost = host, txt = fn)
# browseURL(site)

# upload JSON string
site <- request_site(sitehost = host, txt = js)
site
# browseURL(site)

# upload URL
site <- request_site(sitehost = host, txt = url)
site
# browseURL(site)

# same, but in two steps, starting from file name
# this also works for js and url
resp <- jamesclient::james_post(path = "data/upload", txt = fn)
session <- resp$session
site <- request_site(sitehost = host, session = session)
site
# browseURL(site)

# solutions that create an immediate ?txt=[..data..] query
# this method does not create a cache on the server
site <- request_site(sitehost = host, txt = js, upload = FALSE)
# browseURL(site)
}
}
\seealso{
\code{\link[jamesclient:james_post]{jamesclient::james_post()}}, \code{\link[jamesclient:get_url]{jamesclient::get_url()}}
}
